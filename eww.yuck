(defvar bar_visible true)
(defpoll memory :interval "1s" "./scripts/memory")
(defpoll disk :interval "30s" "./scripts/disc")

(defwidget status_bar  []
    
    (centerbox :class "main_bar" :orientation "h"
        (workspaces)
        (programs)
        (tray)
    )  
)

(defwidget workspaces []
    (box :class "workspaces" :orientation "h" :space-evenly false :halign "end")
)

(defwidget programs []
    (box :class "programs" :orientation "h" :space-evenly false :halign "end"
)
)

(defwidget tray []
    (box :class "tray" :orientation "h" :space-evenly false :halign "end"
        (box :class "sysinfo" :orientation "h" :space-evenly false :halign "end"
            "ram: "{memory} "% | cpu: "
            {round(EWW_CPU.avg, 0)}"% | disk: "
            {disk}
        ) 
        (box :class "time" :orientation "h" :space-evenly false :halign "end" 
            time
        )
        (box :class "date" :orientation "h" :space-evenly false :halign "end"
            date
        )
        
    )
)

(defpoll time :interval "1s"
              :run-while time-visible   ; optional, defaults to 'true'
  `date +%H:%M:%S `)

(defpoll date :interval "60s"
              :run-while time-visible   ; optional, defaults to 'true'
              "date '+%d. %Bta, %Y'")


(defwindow bar1
           :monitor 1
           :geometry (geometry :x "0%"
                               :y "10px"
                               :width "1898px"
                               :height "35px"
                               :anchor "top center")
           :stacking "fg"
           :exclusive true
    (box :class "main_bar"
        (status_bar)
    )
)

(defwindow bar0
    :monitor 0
    :geometry (geometry :x "0%"
                        :y "10px"
                        :width "1898px"
                        :height "35px"
                        :anchor "top center")
    :stacking "fg"
    :exclusive true
    (status_bar)
)